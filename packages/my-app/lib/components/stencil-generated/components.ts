'use client';

/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 */

/* eslint-disable */

import type { EventName, StencilReactComponent } from '@stencil/react-output-target/runtime';
import { createComponent } from '@stencil/react-output-target/runtime';
import React from 'react';
import { AppRoot as AppRootElement, defineCustomElement as defineAppRoot } from "stencil-library/dist/components/app-root.js";
import { MyComponent as MyComponentElement, defineCustomElement as defineMyComponent } from "stencil-library/dist/components/my-component.js";
import { OfferCard as OfferCardElement, defineCustomElement as defineOfferCard } from "stencil-library/dist/components/offer-card.js";
import { OfferDetail as OfferDetailElement, defineCustomElement as defineOfferDetail } from "stencil-library/dist/components/offer-detail.js";
import { OfferList as OfferListElement, defineCustomElement as defineOfferList } from "stencil-library/dist/components/offer-list.js";
import { ToastMessage as ToastMessageElement, defineCustomElement as defineToastMessage } from "stencil-library/dist/components/toast-message.js";
import { ToastWrapper as ToastWrapperElement, defineCustomElement as defineToastWrapper } from "stencil-library/dist/components/toast-wrapper.js";

export type AppRootEvents = NonNullable<unknown>;

export const AppRoot: StencilReactComponent<AppRootElement, AppRootEvents> = /*@__PURE__*/ createComponent<AppRootElement, AppRootEvents>({
    tagName: 'app-root',
    elementClass: AppRootElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as AppRootEvents,
    defineCustomElement: defineAppRoot
});

export type MyComponentEvents = NonNullable<unknown>;

export const MyComponent: StencilReactComponent<MyComponentElement, MyComponentEvents> = /*@__PURE__*/ createComponent<MyComponentElement, MyComponentEvents>({
    tagName: 'my-component',
    elementClass: MyComponentElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as MyComponentEvents,
    defineCustomElement: defineMyComponent
});

export type OfferCardEvents = { onOfferClick: EventName<CustomEvent<string>> };

export const OfferCard: StencilReactComponent<OfferCardElement, OfferCardEvents> = /*@__PURE__*/ createComponent<OfferCardElement, OfferCardEvents>({
    tagName: 'offer-card',
    elementClass: OfferCardElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onOfferClick: 'offerClick' } as OfferCardEvents,
    defineCustomElement: defineOfferCard
});

export type OfferDetailEvents = NonNullable<unknown>;

export const OfferDetail: StencilReactComponent<OfferDetailElement, OfferDetailEvents> = /*@__PURE__*/ createComponent<OfferDetailElement, OfferDetailEvents>({
    tagName: 'offer-detail',
    elementClass: OfferDetailElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OfferDetailEvents,
    defineCustomElement: defineOfferDetail
});

export type OfferListEvents = NonNullable<unknown>;

export const OfferList: StencilReactComponent<OfferListElement, OfferListEvents> = /*@__PURE__*/ createComponent<OfferListElement, OfferListEvents>({
    tagName: 'offer-list',
    elementClass: OfferListElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as OfferListEvents,
    defineCustomElement: defineOfferList
});

export type ToastMessageEvents = NonNullable<unknown>;

export const ToastMessage: StencilReactComponent<ToastMessageElement, ToastMessageEvents> = /*@__PURE__*/ createComponent<ToastMessageElement, ToastMessageEvents>({
    tagName: 'toast-message',
    elementClass: ToastMessageElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as ToastMessageEvents,
    defineCustomElement: defineToastMessage
});

export type ToastWrapperEvents = NonNullable<unknown>;

export const ToastWrapper: StencilReactComponent<ToastWrapperElement, ToastWrapperEvents> = /*@__PURE__*/ createComponent<ToastWrapperElement, ToastWrapperEvents>({
    tagName: 'toast-wrapper',
    elementClass: ToastWrapperElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as ToastWrapperEvents,
    defineCustomElement: defineToastWrapper
});
